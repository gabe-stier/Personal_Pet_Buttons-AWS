AWSTemplateFormatVersion: 2010-09-09
Transform: "AWS::Serverless-2016-10-31"
Description: |
  dogbutton-backend
  Sample SAM Template for dogbutton-backend
Globals:
  Function:
    Timeout: 3
Resources:
  ButtonsAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors: "*"
      Auth:
        DefaultAuthorizer: MyCognitoAuthorizer
        Authorizers:
          MyCognitoAuthorizer:
            UserPoolArn: !GetAtt MyCognitoUserPool.Arn
  ButtonsFunctionGET:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: buttons/
      Handler: app.lambda_handler
      Runtime: python3.10
      Architectures:
        - x86_64
      Events:
        DogButtonAPI:
          Type: Api
          Properties:
            RestApiId: !Ref ButtonsAPI
            Path: /buttons
            Method: get
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ButtonsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref ButtonLogs
    Metadata:
      "AWS::CloudFormation::Designer":
        id: de66c920-405d-436d-a49c-138dbaed0328
    DependsOn:
      - ButtonsTable
      - ButtonLogs
  ButtonsFunctionPOST:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: buttons/
      Handler: app.lambda_handler
      Runtime: python3.10
      Architectures:
        - x86_64
      Events:
        DogButtonAPI:
          Type: Api
          Properties:
            RestApiId: !Ref ButtonsAPI
            Path: /buttons/{action}
            Method: post
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ButtonsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref ButtonLogs
    Metadata:
      "AWS::CloudFormation::Designer":
        id: ae8d7107-07ae-4df9-beaf-5573f3bac602
    DependsOn:
      - ButtonsTable
      - ButtonLogs
  ButtonsFunctionDELETE:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: buttons/
      Handler: app.lambda_handler
      Runtime: python3.10
      Architectures:
        - x86_64
      Events:
        DogButtonAPI:
          Type: Api
          Properties:
            RestApiId: !Ref ButtonsAPI
            Path: /buttons/{action}
            Method: delete
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ButtonsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref ButtonLogs
    Metadata:
      "AWS::CloudFormation::Designer":
        id: ae8d7107-07ae-4df9-beaf-5573f3bac602
    DependsOn:
      - ButtonsTable
      - ButtonLogs
  SettingsFunctionGET:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: settings/
      Handler: app.lambda_handler
      Runtime: python3.10
      Architectures:
        - x86_64
      Events:
        DogButtonAPI:
          Type: Api
          Properties:
            RestApiId: !Ref ButtonsAPI
            Path: /settings
            Method: get
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SettingsTable
    Metadata:
      "AWS::CloudFormation::Designer":
        id: 3b6bb2a6-66a7-431d-a4cc-2d69a544444b
    DependsOn:
      - SettingsTable
  SettingsFunctionPUT:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: settings/
      Handler: app.lambda_handler
      Runtime: python3.10
      Architectures:
        - x86_64
      Events:
        DogButtonAPI:
          Type: Api
          Properties:
            RestApiId: !Ref ButtonsAPI
            Path: /settings
            Method: PUT
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SettingsTable
    Metadata:
      "AWS::CloudFormation::Designer":
        id: 21ea3b94-f41d-4e3e-91c0-4aedc3e04cbd
    DependsOn:
      - SettingsTable
  PingFunction:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: ping/
      Handler: app.lambda_handler
      Runtime: python3.10
      Architectures:
        - x86_64
      Events:
        DogButtonAPI:
          Type: Api
          Properties:
            Path: /ping
            Method: get
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SettingsTable
    Metadata:
      "AWS::CloudFormation::Designer":
        id: 1c10dc11-0a37-4cc4-94a0-e60b0ac05e3b
    DependsOn:
      - SettingsTable
  SettingsTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: SettingsTable
      AttributeDefinitions:
        - AttributeName: ID
          AttributeType: S
      KeySchema:
        - AttributeName: ID
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
    Metadata:
      "AWS::CloudFormation::Designer":
        id: 3e5b4ea4-35c7-423b-a644-3ba222159d20
  ButtonsTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: ButtonsTable
      AttributeDefinitions:
        - AttributeName: ID
          AttributeType: S
      KeySchema:
        - AttributeName: ID
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
    Metadata:
      "AWS::CloudFormation::Designer":
        id: 81d63279-08b6-410a-81f1-2fe3ed565dfb
  ButtonLogs:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: ButtonLogs
      AttributeDefinitions:
        - AttributeName: ID
          AttributeType: S
      KeySchema:
        - AttributeName: ID
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
    Metadata:
      "AWS::CloudFormation::Designer":
        id: 3906230f-e4f6-48e5-af49-61da9f9f3aa9
  SettingsTableInit:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: >
          const AWS = require("aws-sdk");
          const response = require("cfn-response");
          const docClient = new AWS.DynamoDB.DocumentClient();
          try {
            exports.handler = function (event, context) {
              console.log(JSON.stringify(event, null, 2));
              var params = [
                {
                  TableName: event.ResourceProperties.DynamoTableName,
                  Item: {
                    ID: "quietTime",
                    value: [],
                  },
                },
                {
                  TableName: event.ResourceProperties.DynamoTableName,
                  Item: {
                    ID: "quietButtons",
                    value: {},
                  },
                },
                {
                  TableName: event.ResourceProperties.DynamoTableName,
                  Item: {
                    ID: "sendNotifications",
                    value: true,
                  },
                },
                {
                  TableName: event.ResourceProperties.DynamoTableName,
                  Item: {
                    ID: "sendAudio",
                    value: true,
                  },
                },
              ];
              for (var param in params) {
                console.log(params[param])
                docClient.put(params[param], function (err, data) {
                  if (err) {
                    console.log(err);
                    response.send(event, context, "FAILED", {});
                  } else {
                    console.log(data)
                    response.send(event, context, "SUCCESS", {});
                  }
                });
              }
            };
          } catch {
              response.send(event, context, "FAILED", {});
          };
      Handler: index.handler
      Runtime: nodejs16.x
      Role: !GetAtt LambdaRole.Arn
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: dynamodbAccessRole
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:*
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:*
                Resource: "*"
  InitializeDynamoDB:
    Type: Custom::Install
    Properties:
      ServiceToken: !GetAtt SettingsTableInit.Arn
      DynamoTableName:
        Ref: SettingsTable
  MyCognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: CognitoUserPoolName
      Policies:
        PasswordPolicy:
          MinimumLength: 8
      UsernameAttributes:
        - email
      Schema:
        - AttributeDataType: String
          Name: email
          Required: false
  MyCognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref MyCognitoUserPool
      ClientName: CognitoUserPoolClientName
      GenerateSecret: false
Outputs:
  DogButtonAPIApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    Value: !Sub >-
      https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/
  ButtonsFunctionGET:
    Description: Hello World Lambda Function ARN
    Value: !GetAtt ButtonsFunctionGET.Arn
  ButtonsFunctionGETIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value: !GetAtt ButtonsFunctionGETRole.Arn
Metadata:
  "AWS::CloudFormation::Designer":
    1c10dc11-0a37-4cc4-94a0-e60b0ac05e3b:
      size:
        width: 60
        height: 60
      position:
        x: 60
        "y": 90
      z: 1
      embeds: []
      dependson:
        - 3e5b4ea4-35c7-423b-a644-3ba222159d20
    21ea3b94-f41d-4e3e-91c0-4aedc3e04cbd:
      size:
        width: 60
        height: 60
      position:
        x: -50
        "y": 90
      z: 1
      embeds: []
      dependson:
        - 3e5b4ea4-35c7-423b-a644-3ba222159d20
    3b6bb2a6-66a7-431d-a4cc-2d69a544444b:
      size:
        width: 60
        height: 60
      position:
        x: -50
        "y": 180
      z: 1
      embeds: []
      dependson:
        - 3e5b4ea4-35c7-423b-a644-3ba222159d20
    ae8d7107-07ae-4df9-beaf-5573f3bac602:
      size:
        width: 60
        height: 60
      position:
        x: 170
        "y": 90
      z: 1
      embeds: []
      dependson:
        - 81d63279-08b6-410a-81f1-2fe3ed565dfb
        - 3906230f-e4f6-48e5-af49-61da9f9f3aa9
    de66c920-405d-436d-a49c-138dbaed0328:
      size:
        width: 60
        height: 60
      position:
        x: 250
        "y": 90
      z: 1
      embeds: []
      dependson:
        - 81d63279-08b6-410a-81f1-2fe3ed565dfb
        - 3906230f-e4f6-48e5-af49-61da9f9f3aa9
    3e5b4ea4-35c7-423b-a644-3ba222159d20:
      size:
        width: 60
        height: 60
      position:
        x: 60
        "y": 280
      z: 0
      embeds: []
    81d63279-08b6-410a-81f1-2fe3ed565dfb:
      size:
        width: 60
        height: 60
      position:
        x: 150
        "y": 280
      z: 0
      embeds: []
    eae6e363-cb79-48fa-84fe-1c96c104067a:
      source:
        id: 3b6bb2a6-66a7-431d-a4cc-2d69a544444b
      target:
        id: 3e5b4ea4-35c7-423b-a644-3ba222159d20
      z: 2
    5d587350-1c40-4d1e-a932-3ce9c1f20a4d:
      source:
        id: 1c10dc11-0a37-4cc4-94a0-e60b0ac05e3b
      target:
        id: 3e5b4ea4-35c7-423b-a644-3ba222159d20
      z: 3
    e3e326cc-d515-4816-a426-7b3bf911bb1c:
      source:
        id: 21ea3b94-f41d-4e3e-91c0-4aedc3e04cbd
      target:
        id: 3e5b4ea4-35c7-423b-a644-3ba222159d20
      z: 4
    8f043268-ad7e-4068-8671-c7ea1690f85e:
      source:
        id: ae8d7107-07ae-4df9-beaf-5573f3bac602
      target:
        id: 81d63279-08b6-410a-81f1-2fe3ed565dfb
      z: 5
    1dd1845d-6fc6-40be-8e65-a0a4916d492b:
      source:
        id: de66c920-405d-436d-a49c-138dbaed0328
      target:
        id: 81d63279-08b6-410a-81f1-2fe3ed565dfb
      z: 6
    3906230f-e4f6-48e5-af49-61da9f9f3aa9:
      size:
        width: 60
        height: 60
      position:
        x: 230
        "y": 280
      z: 0
      embeds: []
    28469aed-76e5-414e-8775-78aee55b5917:
      source:
        id: ae8d7107-07ae-4df9-beaf-5573f3bac602
      target:
        id: 3906230f-e4f6-48e5-af49-61da9f9f3aa9
      z: 2
    905287c9-cba3-44d1-bfca-afc8d4f5f766:
      source:
        id: de66c920-405d-436d-a49c-138dbaed0328
      target:
        id: 3906230f-e4f6-48e5-af49-61da9f9f3aa9
      z: 3
