AWSTemplateFormatVersion: 2010-09-09
Transform: "AWS::Serverless-2016-10-31"
Description: |
  dogbutton-backend
  Sample SAM Template for dogbutton-backend
Globals:
  Function:
    Timeout: 3
Resources:
  ButtonsFunctionGET:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: buttons/
      Handler: app.lambda_handler
      Runtime: python3.10
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /buttons
            Method: get
    DependsOn:
      - ButtonDataBase
  ButtonsFunctionPOST:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: buttons/
      Handler: app.lambda_handler
      Runtime: python3.10
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /buttons
            Method: post
    DependsOn:
      - ButtonDataBase

  SettingsFunctionGET:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: settings/
      Handler: app.lambda_handler
      Runtime: python3.10
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /settings
            Method: get
    DependsOn:
      - SettingsDataBase

  SettingsFunctionPOST:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: settings/
      Handler: app.lambda_handler
      Runtime: python3.10
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /settings
            Method: post
    DependsOn:
      - SettingsDataBase
  PingFunction:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: ping/
      Handler: app.lambda_handler
      Runtime: python3.10
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /ping
            Method: get
    DependsOn:
      - SettingsDataBase
  ButtonLogDataBase:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      KeySchema:
        - AttributeName: buttonLogID
          KeyType: int
        - AttributeName: buttonLogTime
          KeyType: string
        - AttributeName: buttonID
          KeyType: uuid
  ButtonDataBase:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      KeySchema:
        - AttributeName: buttonID
          KeyType: uuid
        - AttributeName: buttonName
          KeyType: string
  SettingsDataBase:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      KeySchema:
        - AttributeName: settingName
          KeyType: string
        - AttributeName: settingValue
          KeyType: string
Outputs:
  HelloWorldApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    Value: !Sub >-
      https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/
  HelloWorldFunction:
    Description: Hello World Lambda Function ARN
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value: !GetAtt HelloWorldFunctionRole.Arn
